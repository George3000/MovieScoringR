geom_bar(fill="chartreuse1", position="dodge") +
xlab("Movie MPAA Rating") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 1))
label3 <- ggplot(data = my_movies, aes(x=runtime)) +
geom_histogram( binwidth = 5, fill="lightpink1", position="dodge") +
xlab("Movie Runtime") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 1))
label4 <- ggplot(binwidth = 0.5,data = my_movies, aes(x=imdb_rating)) +
geom_histogram( fill="royalblue1", position="dodge") +
xlab("Movie IMDB Rating") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 1))
require(cowplot)
plot_grid(label2,label3,label4,label1, align = "v", nrow =2,scale = 1, rel_heights = c(1,1/2,1/4,0))
#grid.arrange( label1,label2,label3,label4,  nrow=1,top="Movie Details")
require(gridExtra)
label1 <- ggplot(data = my_movies, aes(x=genre)) +
geom_bar(fill="maroon1", position="dodge") +
xlab("Movie Genre") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 1))
label2 <- ggplot(data = my_movies, aes(x=mpaa_rating)) +
geom_bar(fill="chartreuse1", position="dodge") +
xlab("Movie MPAA Rating") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 1))
label3 <- ggplot(data = my_movies, aes(x=runtime)) +
geom_histogram( binwidth = 5, fill="lightpink1", position="dodge") +
xlab("Movie Runtime") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 1))
label4 <- ggplot(binwidth = 0.5,data = my_movies, aes(x=imdb_rating)) +
geom_histogram( fill="royalblue1", position="dodge") +
xlab("Movie IMDB Rating") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 1))
require(cowplot)
plot_grid(label2,label3,label4,label1, align = "v", nrow =2,scale = 1, rel_heights = c(1,1/2,1/4,1/2))
#grid.arrange( label1,label2,label3,label4,  nrow=1,top="Movie Details")
require(gridExtra)
label1 <- ggplot(data = my_movies, aes(x=genre)) +
geom_bar(fill="maroon1", position="dodge") +
xlab("Movie Genre") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 1))
label2 <- ggplot(data = my_movies, aes(x=mpaa_rating)) +
geom_bar(fill="chartreuse1", position="dodge") +
xlab("Movie MPAA Rating") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 1))
label3 <- ggplot(data = my_movies, aes(x=runtime)) +
geom_histogram( binwidth = 5, fill="lightpink1", position="dodge") +
xlab("Movie Runtime") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 1))
label4 <- ggplot(binwidth = 0.5,data = my_movies, aes(x=imdb_rating)) +
geom_histogram( fill="royalblue1", position="dodge") +
xlab("Movie IMDB Rating") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 1))
require(cowplot)
plot_grid(label2,label3,label4,label1, align = "v", nrow =2,scale = 1, rel_heights = c(1,1/2,1/2,1/2))
#grid.arrange( label1,label2,label3,label4,  nrow=1,top="Movie Details")
require(gridExtra)
label1 <- ggplot(data = my_movies, aes(x=genre)) +
geom_bar(fill="maroon1", position="dodge") +
xlab("Movie Genre") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 1))
label2 <- ggplot(data = my_movies, aes(x=mpaa_rating)) +
geom_bar(fill="chartreuse1", position="dodge") +
xlab("Movie MPAA Rating") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 1))
label3 <- ggplot(data = my_movies, aes(x=runtime)) +
geom_histogram( binwidth = 5, fill="lightpink1", position="dodge") +
xlab("Movie Runtime") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 1))
label4 <- ggplot(binwidth = 0.5,data = my_movies, aes(x=imdb_rating)) +
geom_histogram( fill="royalblue1", position="dodge") +
xlab("Movie IMDB Rating") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 1))
require(cowplot)
plot_grid(label2,label3,label4,label1, align = "v", nrow =2,scale = 1, rel_heights = c(1,1/2,1/2,1/2))
grid.arrange( label1,label2,label3,label4,  nrow=1,top="Movie Details")
require(gridExtra)
label1 <- ggplot(data = my_movies, aes(x=genre)) +
geom_bar(fill="maroon1", position="dodge") +
xlab("Movie Genre") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 1))
label2 <- ggplot(data = my_movies, aes(x=mpaa_rating)) +
geom_bar(fill="chartreuse1", position="dodge") +
xlab("Movie MPAA Rating") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 1))
label3 <- ggplot(data = my_movies, aes(x=runtime)) +
geom_histogram( binwidth = 5, fill="lightpink1", position="dodge") +
xlab("Movie Runtime") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 1))
label4 <- ggplot(binwidth = 0.5,data = my_movies, aes(x=imdb_rating)) +
geom_histogram( fill="royalblue1", position="dodge") +
xlab("Movie IMDB Rating") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 1))
grid.arrange( label1,label2,label3,label4,  nrow=1,top="Movie Details")
require(gridExtra)
label1 <- ggplot(data = my_movies, aes(x=genre)) +
geom_bar(fill="maroon1", position="dodge") +
xlab("Movie Genre") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 1))
label2 <- ggplot(data = my_movies, aes(x=mpaa_rating)) +
geom_bar(fill="chartreuse1", position="dodge") +
xlab("Movie MPAA Rating") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 1))
label3 <- ggplot(data = my_movies, aes(x=runtime)) +
geom_histogram( binwidth = 5, fill="lightpink1", position="dodge") +
xlab("Movie Runtime") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 1))
label4 <- ggplot(binwidth = 0.5,data = my_movies, aes(x=imdb_rating)) +
geom_histogram( fill="royalblue1", position="dodge") +
xlab("Movie IMDB Rating") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 1))
grid.arrange( label2,label3,label4,  nrow=1,top="Movie Details")
require(gridExtra)
label1 <- ggplot(data = my_movies, aes(x=genre)) +
geom_bar(fill="maroon1", position="dodge") +
xlab("Movie Genre") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 1))
label2 <- ggplot(data = my_movies, aes(x=mpaa_rating)) +
geom_bar(fill="chartreuse1", position="dodge") +
xlab("Movie MPAA Rating") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 1))
label3 <- ggplot(data = my_movies, aes(x=runtime)) +
geom_histogram( binwidth = 5, fill="lightpink1", position="dodge") +
xlab("Movie Runtime") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 1))
label4 <- ggplot(binwidth = 0.5,data = my_movies, aes(x=imdb_rating)) +
geom_histogram( fill="royalblue1", position="dodge") +
xlab("Movie IMDB Rating") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 1))
grid.arrange( label1,label2,label3,label4,  nrow=1,top="Movie Details")
anova(final_mlr)
plot(final_mlr$residuals)
vif(final_mlr)
vif(final_mlr)
plot(final_mlr$residuals)
vif(final_mlr)
sqrt(vif(final_mlr)) >2
#plot(final_mlr$residuals)
plot(final_mlr$residuals ~ final_mlr$genre)
plot(final_mlr$residuals ~ my_movies$genre)
# type your code for the Exercise here, and Knit
m_bty <- lm(evals$score ~ evals$bty_avg)
plot(jitter(evals$score) ~ jitter(evals$bty_avg))
abline(m_bty)
# type your code for the Exercise here, and Knit
m_bty <- lm(evals$score ~ evals$bty_avg)
plot(jitter(evals$score) ~ jitter(evals$bty_avg))
abline(m_bty)
summary(m_bty)
plot(m_bty$residuals ~ evals$bty_avg)
abline(h = 0)
plot(abs(m_bty$residuals) ~ m_bty$fitted)
hist(m_bty$residuals, n=20)
qqnorm(m_bty$residuals)
qqline(m_bty$residuals)
ggpaired(my_movies)
ggpaired(my_movies, columns=2:6)
#my_vars <- c("title", "genre", "runtime", "mpaa_rating","best_dir_win", "best_actor_win", "best_actress_win","imdb_rating")
plot(my_movies["imdb_rating","genre"], pch=1, col="blue", main="Matrix Scatterplot of movies  variables"  )
#plot(final_mlr$residuals ~ my_movies$genre)
#my_vars <- c("title", "genre", "runtime", "mpaa_rating","best_dir_win", "best_actor_win", "best_actress_win","imdb_rating")
plot(my_movies["imdb_rating","runtime"], pch=1, col="blue", main="Matrix Scatterplot of movies  variables"  )
#my_vars <- c("title", "genre", "runtime", "mpaa_rating","best_dir_win", "best_actor_win", "best_actress_win","imdb_rating")
plot(my_movies["imdb_rating","mpaa_rating"], pch=1, col="blue", main="Matrix Scatterplot of movies  variables"  )
#plot(final_mlr$residuals ~ my_movies$genre)
#my_vars <- c("title", "genre", "runtime", "mpaa_rating","best_dir_win", "best_actor_win", "best_actress_win","imdb_rating")
plot(my_movies["imdb_rating","best_dir_win"], pch=1, col="blue", main="Matrix Scatterplot of movies  variables"  )
#plot(final_mlr$residuals ~ my_movies$genre)
hist(cog_final$residuals)
hist(final_mlr$residuals)
qqnorm(final_mlr$residuals)
qqline(final_mlr$residuals)
#plot(final_mlr$residuals ~ my_movies$genre)
plot(final_mlr$residuals ~ final_mlr$fitted)
plot(abs(final_mlr$residuals) ~ final_mlr$fitted.values)
plot(final_mlr$residuals ~ final_mlr$fitted)
plot(abs(final_mlr$residuals) ~ final_mlr$fitted)
plot(final_mlr$residuals ~ final_mlr$fitted, main="Residuals vs. fitted")
plot(abs(final_mlr$residuals) ~ final_mlr$fitted, main= "Absolute value of residuals vs. fitted")
plot(final_mlr$residuals ~ final_mlr$fitted, main="Residuals vs. fitted")
abline(h = 0)
plot(abs(final_mlr$residuals) ~ final_mlr$fitted, main= "Absolute value of residuals vs. fitted")
hist(final_mlr$residuals, main = "Histogram of residuals")
qqnorm(final_mlr$residuals)
qqline(final_mlr$residuals)
hist(final_mlr$residuals, main = "Histogram of residuals")
qqnorm(final_mlr$residuals, main = "Normal probability plot of residuals")
qqline(final_mlr$residuals)
plot(final_mlr$residuals, main = "Independence of residuals")
plot(final_mlr$residuals, main = "Independence of residuals")
abline(h = 0)
# type your code for the Exercise here, and Knit
plot(evals$bty_avg ~ evals$bty_f1lower)
cor(evals$bty_avg, evals$bty_f1lower)
plot(evals[,13:19])
m_bty_gen <- lm(score ~ bty_avg + gender, data = evals)
summary(m_bty_gen)
# type your code for the Exercise here, and Knit
plot(evals$bty_avg ~ evals$bty_f1lower)
cor(evals$bty_avg, evals$bty_f1lower)
plot(evals[,13:19])
#m_bty_gen <- lm(score ~ bty_avg + gender, data = evals)
#summary(m_bty_gen)
# type your code for the Exercise here, and Knit
plot(evals$bty_avg ~ evals$bty_f1lower)
cor(evals$bty_avg, evals$bty_f1lower)
#plot(evals[,13:19])
#m_bty_gen <- lm(score ~ bty_avg + gender, data = evals)
#summary(m_bty_gen)
# type your code for the Exercise here, and Knit
plot(evals$bty_avg ~ evals$bty_f1lower)
cor(evals$bty_avg, evals$bty_f1lower)
plot(evals[,13:19])
#m_bty_gen <- lm(score ~ bty_avg + gender, data = evals)
#summary(m_bty_gen)
# type your code for the Exercise here, and Knit
#plot(evals$bty_avg ~ evals$bty_f1lower)
#cor(evals$bty_avg, evals$bty_f1lower)
plot(evals[,13:19])
#m_bty_gen <- lm(score ~ bty_avg + gender, data = evals)
#summary(m_bty_gen)
m_bty_gen <- lm(score ~ bty_avg + gender, data = evals)
summary(m_bty_gen)
ggpairs(evals, columns = 13:19)
ggpairs(evals, columns = 13:19)
require(GGally)
ggpairs(my_movies, columns = 2:8)
require(gridExtra)
label1 <- ggplot(data = my_movies, aes(x=genre)) +
geom_bar(fill="maroon1", position="dodge") +
xlab("Movie Genre") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 1))
label2 <- ggplot(data = my_movies, aes(x=mpaa_rating)) +
geom_bar(fill="chartreuse1", position="dodge") +
xlab("Movie MPAA Rating") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 1))
label3 <- ggplot(data = my_movies, aes(x=runtime)) +
geom_histogram( binwidth = 5, fill="lightpink1", position="dodge") +
xlab("Movie Runtime") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 1))
label4 <- ggplot(binwidth = 0.5,data = my_movies, aes(x=imdb_rating)) +
geom_histogram( fill="royalblue1", position="dodge") +
xlab("Movie IMDB Rating") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 1))
grid.arrange( label1,label2,label3,label4,  nrow=1,top="Movie Details")
my_test_mlr<-data.frame(genre="Drama", runtime=127, mpaa_rating="PG", best_dir_win="no")
mlr_HF <- predict(final_mlr, my_test_mlr, interval = "predict")
summary(mlr_HF)
my_test_mlr<-data.frame(genre="Drama", runtime=127, mpaa_rating="PG", best_dir_win="no")
mlr_HF <- predict(final_mlr, my_test_mlr, interval = "predict")
summary(mlr_HF)
c_names =c("Movie","Movie	Predicted Rating",	"95% CI",	"Observed Rating")
c_values =c("Hidden Figures",mlr_HF[1],paste(mlr_HF[2],"-", mlr_HF[3])    ,"7.8")
table(c_names, c_values)
table(c_names, c_values)
my_test_mlr<-data.frame(genre="Drama", runtime=127, mpaa_rating="PG", best_dir_win="no")
mlr_HF <- predict(final_mlr, my_test_mlr, interval = "predict")
summary(mlr_HF)
c_names =c("Movie","Movie	Predicted Rating",	"95% CI",	"Observed Rating")
c_values =c("Hidden Figures",round(mlr_HF[1],1),paste(mlr_HF[2],"-", mlr_HF[3])    ,"7.8")
my_df <- data.frame()
# Show prediction results.
c_names =c("Movie","Movie	Predicted Rating",	"95% CI",	"Observed Rating")
HF_df <- data.frame(t=c("Hidden Figures"),p=c(sprintf("%2.1f", mlr_HF[1])),
i=c(sprintf("%2.1f - %2.1f", mlr_HF[2],mlr_HF[3]), r=c("7.8")))
kable(HF_df, col.names=c_names)
# Show prediction results.
c_names =c("Movie","Movie	Predicted Rating",	"95% CI",	"Observed Rating")
HF_df <- data.frame(t=c("Hidden Figures"),p=c(sprintf("%2.1f", mlr_HF[1])),
i=c(sprintf("%2.1f - %2.1f", mlr_HF[2],mlr_HF[3]), r=c("7.8")))
table(HF_df, col.names=c_names)
# Show prediction results.
c_names =c("Movie","Movie	Predicted Rating",	"95% CI",	"Observed Rating")
HF_df <- data.frame(t=c("Hidden Figures"),p=c(sprintf("%2.1f", mlr_HF[1])),
i=c(sprintf("%2.1f - %2.1f", mlr_HF[2],mlr_HF[3]), r=c("7.8")))
HF_df
table(HF_df, col.names=c_names)
# Show prediction results.
require(kableExtra)
c_names =c("Movie","Movie	Predicted Rating",	"95% CI",	"Observed Rating")
HF_df <- data.frame(t=c("Hidden Figures"),p=c(sprintf("%2.1f", mlr_HF[1])),
i=c(sprintf("%2.1f - %2.1f", mlr_HF[2],mlr_HF[3]), r=c("7.8")))
HF_df
kable(HF_df, col.names=c_names)
# Show prediction results.
require(kableExtra)
require(knitr)
c_names =c("Movie","Movie	Predicted Rating",	"95% CI",	"Observed Rating")
HF_df <- data.frame(t=c("Hidden Figures"),p=c(sprintf("%2.1f", mlr_HF[1])),
i=c(sprintf("%2.1f - %2.1f", mlr_HF[2],mlr_HF[3]), r=c("7.8")))
kable(HF_df, col.names=c_names)
# Show prediction results.
require(kableExtra)
require(knitr)
c_names =c("Movie","Movie	Predicted Rating",	"95% CI",	"Observed Rating")
HF_df <- data.frame(t=c("Hidden Figures"),p=c(sprintf("%2.1f", mlr_HF[1])),
i=c(sprintf("%2.1f - %2.1f", mlr_HF[2],mlr_HF[3]), r=c("7.8")))
kable(HF_df)
# Show prediction results.
require(kableExtra)
require(knitr)
c_names =c("Movie","Movie	Predicted Rating",	"95% CI",	"Observed Rating")
HF_df <- data.frame(t=c("Hidden Figures"),p=c(sprintf("%2.1f", mlr_HF[1])),
i=c(sprintf("%2.1f - %2.1f", mlr_HF[2],mlr_HF[3]), r=c("7.8"))))
# Show prediction results.
require(kableExtra)
require(knitr)
c_names =c("Movie","Movie	Predicted Rating",	"95% CI",	"Observed Rating")
HF_df <- data.frame(t=c("Hidden Figures"),p=c(sprintf("%2.1f", mlr_HF[1])),
i=c(sprintf("%2.1f - %2.1f", mlr_HF[2],mlr_HF[3]), r=c("7.8")))
kable(HF_df,col.names=c("Movie","Movie	Predicted Rating",	"95% CI",	"Observed Rating"))
dim(HF_df)
HF_df
# Show prediction results.
require(kableExtra)
require(knitr)
c_names =c("Movie","Predicted Rating",	"95% CI",	"Observed Rating")
HF_df <- data.frame(t=c("Hidden Figures"),p=c(sprintf("%2.1f", mlr_HF[1])),
i=c(sprintf("%2.1f - %2.1f", mlr_HF[2],mlr_HF[3]), r=c("7.8")))
kable(HF_df,col.names=c("Movie","Movie	Predicted Rating",	"95% CI",	"Observed Rating"))
# Show prediction results.
require(kableExtra)
require(knitr)
c_names =c("Movie","Predicted Rating",	"95% CI",	"Observed Rating")
HF_df <- data.frame(t=c("Hidden Figures"),p=c(sprintf("%2.1f", mlr_HF[1])),
i=c(sprintf("%2.1f - %2.1f", mlr_HF[2],mlr_HF[3]), r=c("7.8")))
kable(HF_df, col.names = c("Movie","Movie	Predicted Rating",	"95% CI",	"Observed Rating"))
# Show prediction results.
require(kableExtra)
require(knitr)
c_names =c("Movie","Predicted Rating",	"95% CI",	"Observed Rating")
HF_df <- data.frame(t=c("Hidden Figures"),p=c(sprintf("%2.1f", mlr_HF[1])),
i=c(sprintf("%2.1f - %2.1f", mlr_HF[2],mlr_HF[3]), r=c("7.8")))
kable(HF_df, col.names = c("Movie","Predicted Rating",	"95% CI",	"Observed Rating"))
# Show prediction results.
require(kableExtra)
require(knitr)
c_names =c("Movie","Predicted Rating",	"95% CI",	"Observed Rating")
hf_df <- data.frame(t=c("Hidden Figures"),p=c(sprintf("%2.1f", mlr_HF[1])),
i=c(sprintf("%2.1f - %2.1f", mlr_HF[2],mlr_HF[3]), r=c("7.8")))
kable(hf_df, col.names = c("Movie","Predicted Rating",	"95% CI",	"Observed Rating"))
dimnames(hf_df)
# Show prediction results.
require(kableExtra)
require(knitr)
c_names =c("Movie","Predicted Rating",	"95% CI",	"Observed Rating")
hf_df <- data.frame(t=c("Hidden Figures"),p=c(sprintf("%2.1f", mlr_HF[1])),
i=c(sprintf("%2.1f - %2.1f", mlr_HF[2],mlr_HF[3]), r=c("7.8")))
kable(hf_df, "html")
# Show prediction results.
require(kableExtra)
require(knitr)
c_names =c("Movie","Predicted Rating",	"95% CI",	"Observed Rating")
hf_df <- data.frame(t=c("Hidden Figures"),p=c(sprintf("%2.1f", mlr_HF[1])),
i=c(sprintf("%2.1f - %2.1f", mlr_HF[2],mlr_HF[3]), r=c("7.8")))
table(hf_df)
# Show prediction results.
require(kableExtra)
require(knitr)
c_names =c("Movie","Predicted Rating",	"95% CI",	"Observed Rating")
hf_df <- data.frame(c("Hidden Figures"),c(sprintf("%2.1f", mlr_HF[1])),
c(sprintf("%2.1f - %2.1f", mlr_HF[2],mlr_HF[3]), c("7.8")))
table(hf_df)
head(iris[,1:3])
typeof(iris)
mlr_HF
arg0 <- list(code = "a", n = rep(10, 3))
arg0
my_test_mlr<-data.frame(genre="Drama", runtime=127, mpaa_rating="PG", best_dir_win="no")
mlr_HF <- predict(final_mlr, my_test_mlr, interval = "predict")
summary(mlr_HF)
show_pred_hf <- list("Hidden Figures", round(mlr_HF[1],1),(paste(mlr_HF[2],"-", mlr_HF[3])),"7.8")
show_pred_hf
my_test_mlr<-data.frame(genre="Drama", runtime=127, mpaa_rating="PG", best_dir_win="no")
mlr_HF <- predict(final_mlr, my_test_mlr, interval = "predict")
summary(mlr_HF)
show_pred_hf <- list("Hidden Figures", round(mlr_HF[1],1),(paste(round(mlr_HF[2],1),"-", round(mlr_HF[3]),1),"7.8")
my_test_mlr<-data.frame(genre="Drama", runtime=127, mpaa_rating="PG", best_dir_win="no")
mlr_HF <- predict(final_mlr, my_test_mlr, interval = "predict")
summary(mlr_HF)
show_pred_hf <- list("Hidden Figures", round(mlr_HF[1],1),(paste(round(mlr_HF[2],1),"-", round(mlr_HF[3]),1),"7.8")
my_test_mlr<-data.frame(genre="Drama", runtime=127, mpaa_rating="PG", best_dir_win="no")
mlr_HF <- predict(final_mlr, my_test_mlr, interval = "predict")
summary(mlr_HF)
show_pred_hf <- list("Hidden Figures", round(mlr_HF[1],1),(paste(round(mlr_HF[2],1),"-", round(mlr_HF[3],1),"7.8")
show_pred_hf
my_test_mlr<-data.frame(genre="Drama", runtime=127, mpaa_rating="PG", best_dir_win="no")
mlr_HF <- predict(final_mlr, my_test_mlr, interval = "predict")
summary(mlr_HF)
show_pred_hf <- list("Hidden Figures", round(mlr_HF[1],1),(paste(round(mlr_HF[2],1)),"-", round(mlr_HF[3],1),"7.8")
my_test_mlr<-data.frame(genre="Drama", runtime=127, mpaa_rating="PG", best_dir_win="no")
mlr_HF <- predict(final_mlr, my_test_mlr, interval = "predict")
summary(mlr_HF)
show_pred_hf <- list("Hidden Figures", round(mlr_HF[1],1),paste(round(mlr_HF[2],1),"-", round(mlr_HF[3],1)),"7.8")
show_pred_hf
my_test_mlr<-data.frame(genre="Drama", runtime=127, mpaa_rating="PG", best_dir_win="no")
mlr_HF <- predict(final_mlr, my_test_mlr, interval = "predict")
summary(mlr_HF)
show_pred_hf <- list("Hidden Figures", round(mlr_HF[1],1),paste(round(mlr_HF[2],1),"-", round(mlr_HF[3],1)),"7.8")
data.frame(lapply(show_pred_hf, function(x) t(data.frame(x))))
my_test_mlr<-data.frame(genre="Drama", runtime=127, mpaa_rating="PG", best_dir_win="no")
mlr_HF <- predict(final_mlr, my_test_mlr, interval = "predict")
summary(mlr_HF)
show_pred_hf <- c("Hidden Figures", round(mlr_HF[1],1),paste(round(mlr_HF[2],1),"-", round(mlr_HF[3],1)),"7.8")
show_pred_hf
my_test_mlr<-data.frame(genre="Drama", runtime=127, mpaa_rating="PG", best_dir_win="no")
mlr_HF <- predict(final_mlr, my_test_mlr, interval = "predict")
summary(mlr_HF)
show_pred_hf <- c("Hidden Figures", round(mlr_HF[1],1),paste(round(mlr_HF[2],1),"-", round(mlr_HF[3],1)),"7.8")
kable(show_pred_hf, col.names = c("Movie","Predicted Rating",	"95% CI",	"Observed Rating"))
my_test_mlr<-data.frame(genre="Drama", runtime=127, mpaa_rating="PG", best_dir_win="no")
mlr_HF <- predict(final_mlr, my_test_mlr, interval = "predict")
summary(mlr_HF)
show_pred_hf <- c("Hidden Figures", round(mlr_HF[1],1),(paste0(round(mlr_HF[2],1),"-",round(mlr_HF[3],1))),"7.8")
kable(show_pred_hf, col.names = c("Movie","Predicted Rating",	"95% CI",	"Observed Rating"))
my_test_mlr<-data.frame(genre="Drama", runtime=127, mpaa_rating="PG", best_dir_win="no")
mlr_HF <- predict(final_mlr, my_test_mlr, interval = "predict")
summary(mlr_HF)
show_pred_hf <- c("Hidden Figures", round(mlr_HF[1],1),paste(round(mlr_HF[2],1),round(mlr_HF[3],1),sep = "-"),"7.8")
kable(show_pred_hf, col.names = c("Movie","Predicted Rating",	"95% CI",	"Observed Rating"))
show_pred_hf
my_test_mlr<-data.frame(genre="Drama", runtime=127, mpaa_rating="PG", best_dir_win="no")
mlr_HF <- predict(final_mlr, my_test_mlr, interval = "predict")
summary(mlr_HF)
show_pred_hf <- c("Hidden Figures", round(mlr_HF[1],1),paste(round(mlr_HF[2],1),round(mlr_HF[3],1),sep = "-"),"7.8")
show_pred_hf
kable(show_pred_hf, col.names = c("Movie","Predicted Rating",	"95% CI",	"Observed Rating"))
my_test_mlr<-data.frame(genre="Drama", runtime=127, mpaa_rating="PG", best_dir_win="no")
mlr_HF <- predict(final_mlr, my_test_mlr, interval = "predict")
summary(mlr_HF)
show_pred_hf <- c("Hidden Figures", round(mlr_HF[1],1),paste(round(mlr_HF[2],1),round(mlr_HF[3],1),sep = "-"),"7.8")
show_pred_hf
kable(show_pred_hf)
my_test_mlr<-data.frame(genre="Drama", runtime=127, mpaa_rating="PG", best_dir_win="no")
mlr_HF <- predict(final_mlr, my_test_mlr, interval = "predict")
#summary(mlr_HF)
show_pred_hf <- c("Hidden Figures", round(mlr_HF[1],1),paste(round(mlr_HF[2],1),round(mlr_HF[3],1),sep = "-"),"7.8")
show_pred_hf
kable(show_pred_hf)
my_test_mlr<-data.frame(genre="Drama", runtime=127, mpaa_rating="PG", best_dir_win="no")
mlr_HF <- predict(final_mlr, my_test_mlr, interval = "predict")
summary(mlr_HF)
show_pred_hf <- c("Hidden Figures", round(mlr_HF[1],1),paste(round(mlr_HF[2],1),round(mlr_HF[3],1),sep = "-"),"7.8")
#, col.names = c("Movie","Predicted Rating",	"95% CI",	"Observed Rating")
kable(show_pred_hf)
kable(show_pred_hf)
aste(round(mlr_HF[2],1),round(mlr_HF[3],1),sep = "-")
paste(round(mlr_HF[2],1),round(mlr_HF[3],1),sep = "-")
round(mlr_HF[1],1)
my_test_mlr<-data.frame(genre="Drama", runtime=127, mpaa_rating="PG", best_dir_win="no")
mlr_HF <- predict(final_mlr, my_test_mlr, interval = "predict")
summary(mlr_HF)
show_pred_hf <- c("Hidden Figures", round(mlr_HF[1],1),paste(round(mlr_HF[2],1),round(mlr_HF[3],1),sep = "-"),"7.8")
#, col.names = c("Movie","Predicted Rating",	"95% CI",	"Observed Rating")
df <- data.frame(show_pred_hf)
kable(df)
my_test_mlr<-data.frame(genre="Drama", runtime=127, mpaa_rating="PG", best_dir_win="no")
mlr_HF <- predict(final_mlr, my_test_mlr, interval = "predict")
summary(mlr_HF)
show_pred_hf <- c("Hidden Figures", round(mlr_HF[1],1),paste(round(mlr_HF[2],1),round(mlr_HF[3],1),sep = "-"),"7.8")
#, col.names = c("Movie","Predicted Rating",	"95% CI",	"Observed Rating")
df <- data.frame(show_pred_hf)
kable(df, ol.names = c("Movie","Predicted Rating",	"95% CI",	"Observed Rating"))
my_test_mlr<-data.frame(genre="Drama", runtime=127, mpaa_rating="PG", best_dir_win="no")
mlr_HF <- predict(final_mlr, my_test_mlr, interval = "predict")
summary(mlr_HF)
show_pred_hf <- c("Hidden Figures", round(mlr_HF[1],1),paste(round(mlr_HF[2],1),round(mlr_HF[3],1),sep = "-"),"7.8")
#, col.names = c("Movie","Predicted Rating",	"95% CI",	"Observed Rating")
df <- data.frame(show_pred_hf)
kable(df, col.names = c("Movie","Predicted Rating",	"95% CI",	"Observed Rating"))
dimnames(df)
my_test_mlr
my_test_mlr<-data.frame(genre="Drama", runtime=127, mpaa_rating="PG", best_dir_win="no")
mlr_HF <- predict(final_mlr, my_test_mlr, interval = "predict")
summary(mlr_HF)
show_pred_hf <- data.frame("Hidden Figures", round(mlr_HF[1],1),paste(round(mlr_HF[2],1),round(mlr_HF[3],1),sep = "-"),"7.8")
#, col.names = c("Movie","Predicted Rating",	"95% CI",	"Observed Rating")
kable(show_pred_hf, col.names = c("Movie","Predicted Rating",	"95% CI",	"Observed Rating"))
my_test_mlr<-data.frame(genre="Drama", runtime=127, mpaa_rating="PG", best_dir_win="no")
mlr_HF <- predict(final_mlr, my_test_mlr, interval = "predict")
summary(mlr_HF)
show_pred_hf <- data.frame("Hidden Figures", round(mlr_HF[1],1),paste(round(mlr_HF[2],1),round(mlr_HF[3],1),sep = "-"),"7.8")
#, col.names = c("Movie","Predicted Rating",	"95% CI",	"Observed Rating")
require(knitr)
require(kableExtra)
kable(show_pred_hf, col.names = c("Movie","Predicted Rating",	"95% CI",	"Observed Rating"))
my_test_mlr<-data.frame(genre="Drama", runtime=127, mpaa_rating="PG", best_dir_win="no")
mlr_HF <- predict(final_mlr, my_test_mlr, interval = "predict")
summary(mlr_HF)
show_pred_hf <- data.frame("Hidden Figures", round(mlr_HF[1],1),paste(round(mlr_HF[2],1),round(mlr_HF[3],1),sep = "-"),"7.8")
#, col.names = c("Movie","Predicted Rating",	"95% CI",	"Observed Rating")
require(knitr)
require(kableExtra)
kable(show_pred_hf, col.names = c("Movie","Predicted Rating",	"95% CI",	"Observed Rating"))
library(ggplot2)
library(dplyr)
library(statsr)
library(knitr)
library(kableExtra)
install.packages(kableExtra)
library(ggplot2)
library(dplyr)
library(statsr)
library(knitr)
library(kableExtra)
library(ggplot2)
library(dplyr)
library(statsr)
library(knitr)
library(MASS)
my_mlr <- lm(imdb_rating~ genre + runtime + mpaa_rating +
best_dir_win + best_actor_win + best_actress_win, data = my_movies)
step <- stepAIC(my_mlr, direction="both")
step$anova # display results
